---
- name: Label baremetal worker nodes as worker-cnf
  k8s:
    definition:
      kind: Node
      name: "{{ hostvars[item].hostname }}"
      metadata:
        labels:
          feature.node.kubernetes.io/network-sriov.capable: "true"
  with_items: "{{ groups['baremetal_workers'] }}"
 
- name: Create namespace for the SRIOV Network Operator
  k8s:
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: openshift-sriov-network-operator
        labels:
          openshift.io/run-level: "1"

- name: Create operator group for SRIOV Network Operator
  k8s:
    definition:
      api_version: operators.coreos.com/v1
      kind: OperatorGroup
      name: sriov-network-operators
      namespace: openshift-sriov-network-operator
      spec:
        targetNamespaces:
          - openshift-sriov-network-operator

- name: Find subscription channel
  definition:
    tags: get_subscription_version
    k8s_info:
      api_version: packages.operators.coreos.com/v1
      kind: PackageManifest
      name: sriov-network-operator
      namespace: default
  register: sriov_manifest

  #- name: Apply the SRIOV Subscription config
  #k8s:
  #  state: present
  #  definition: "{{ lookup('template', 'templates/sub-sriov.yml') }}"

# - name: Log sriov_manifest
#   debug: 
#     msg: "{{ sriov_manifest.resources[0].status.defaultChannel }}"

- name: Subscribe to SRIOV Network Operator
  k8s:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: sriov-network-operator-subsription
    namespace: openshift-sriov-network-operator
    resource_definition:
      spec:
        channel: "{{ sriov_manifest.resources[0].status.defaultChannel }}"
        installPlanApproval: Manual
        name: sriov-network-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace
         
        #- name: Wait for SRIOV Network Operator pod
        #  k8s_info:
        #    api_version: v1
        #   kind: Pod
        #   namespace: openshift-sriov-network-operator
        #   field_selectors:
        #     - status.phase=Running
        # register: pod_status
        # until: pod_status is succeeded
        # retries: 100
        # delay: 5

- name: "Get SRIOV InstallPlan details"
  k8s_info:
    api: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: openshift-sriov-network-operator
  register: sriov_ip
  retries: 30
  delay: 5
  until:
    - "sriov_ip.resources|length  >= 1"
    - "'spec' in sriov_ip.resources[0]"
    - "'clusterServiceVersionNames' in sriov_ip.resources[0].spec"

- name: "Set SRIOV CSV name from IP"
  set_fact:
    sriov_csv_name: "{{ sriov_ip.resources[0].spec.clusterServiceVersionNames[0] }}"

- name: get CSVs in sriov-network-operator ns
  k8s_info:
    api: operators.coreos.com/v1alpha1
    namespace: openshift-sriov-network-operator
    kind: ClusterServiceVersion
    name: "{{ sriov_csv_name }}"
  register: csv
  retries: 30
  delay: 5
  #no_log: true
  until:
    - "csv.resources|length == 1"
    - "'status' in csv.resources[0]"
    - "'phase' in csv.resources[0].status"
    - "csv.resources[0].status.phase == 'Succeeded'"

- name: Execute SRIOV interface PCI command on baremetal worker over SSH
  shell: "{{ playbook_dir }}/exec_over_ssh.sh {{ hostvars[item].hostname }} 'ethtool -i {{ du_sriov_int }} ' | awk '/bus-info:/{print $NF;}'"
  register: du_sriov_int_pci
  with_items: "{{ groups['baremetal_workers'] }}"

- name: Log all_cpus
  debug: 
   msg: "du_sriov_int_pci: {{du_sriov_int_pci.results[0].stdout}}"

  #- name: Execute all CPU command on baremetal worker
  #  community.kubernetes.k8s_exec:
  #    namespace: "{{ hostvars[item].namespace }}"
  #    pod: "{{ hostvars[item].hostname }}"
  #    command: lscpu | awk '/On-line CPU/{print $NF;}'
  #  register: all_cpus
  #  with_items: "{{ groups['baremetal_workers'] }}"

  #- name: Execute reserved CPU command on baremetal worker
  #  community.kubernetes.k8s_exec:
  #    namespace: "{{ hostvars[item].namespace }}"
  #    pod: "{{ hostvars[item].hostname }}"
  #    command: cat /sys/bus/cpu/devices/cpu0/topology/thread_siblings_list
  #  register: du_reserved_cpus
  #  with_items: "{{ groups['baremetal_workers'] }}"

- name: Apply the SRIOV NIC Policy config
  k8s:
    api_version: sriovnetwork.openshift.io/v1
    kind: SriovNetworkNodePolicy
    name: policy-intel-west
    namespace: openshift-sriov-network-operator
    resource_definition:
      spec:
        deviceType: vfio-pci
        mtu: 9000
        nicSelector:
          rootDevices:
          - "{{ du_sriov_int_pci.results[0].stdout }}"
          pfNames:
          - "{{ du_sriov_int }}"
        nodeSelector:
          feature.node.kubernetes.io/network-sriov.capable: "true"
        numVfs: 8
        priority: 5
        resourceName: intelnics0

        #- name: Apply the SRIOV NIC Policy config
        #k8s:
        #state: present
        #definition: "{{ lookup('template', 'templates/sriov-nic-policy.yml') }}"

- name: Apply the VLAN10 SRIOV Network
  k8s:
    api_version: sriovnetwork.openshift.io/v1
    kind: SriovNetwork
    name: sriov-vlan10
    namespace: openshift-sriov-network-operator
    resource_definition:
      spec:
        ipam: ""
        capabilities: '{ "mac": true }'
        resourceName: intelnics0
        vlan: 10
        spoofChk: "off"
        trust: "on"
        networkNamespace: "{{ flexran_du_ns }}"

- name: Apply the VLAN20 SRIOV Network
  k8s:
    api_version: sriovnetwork.openshift.io/v1
    kind: SriovNetwork
    name: sriov-vlan20
    namespace: openshift-sriov-network-operator
    resource_definition:
      spec:
        ipam: ""
        capabilities: '{ "mac": true }'
        resourceName: intelnics0
        vlan: 20
        spoofChk: "off"
        trust: "on"
        networkNamespace: "{{ flexran_du_ns }}"

      #- name: Apply the SRIOV VLAN Network configs
      #k8s:
      #state: present
      #definition: "{{ lookup('template', 'templates/sriov-network.yml') }}"

- pause:
    seconds: 60

- name: Wait for VF creation
  #shell: "{{ playbook_dir }}/exec_over_ssh.sh {{ hostvars[item].hostname }} 'ip link show {{ du_sriov_int }}' | egrep '^\s+vf\s'"
  shell: |
    "{{ playbook_dir }}/exec_over_ssh.sh" "{{ hostvars[item].hostname }}" "ip link show ens1f0 | egrep '^\s+vf\s'"
  register: vf_status
  retries: 30
  delay: 5
  with_items: "{{ groups['baremetal_workers'] }}"
  until:
    - (vf_status.stdout | length > 0)
