---
- name: start ru on trafficgen server
  include: ru.yml
  delegate_to: trafficgen
  when: run_ru is defined and run_ru

- name: create namespace {{flexran_du_ns}}
  k8s:
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: "{{flexran_du_ns}}" 

- name: delete existing FlexRAN pod
  k8s:
    state: absent
    kind: Pod
    namespace: "{{flexran_du_ns}}"
    name: flexran-du
    api_version: v1

- name: make sure FlexRAN is gone
  k8s_info:
    api: v1 
    namespace: "{{flexran_du_ns}}"
    kind: Pod
    name: flexran-du
  register: flexran_pod
  retries: 60
  delay: 5
  until:
    - "flexran_pod.resources|length == 0 "

- name: create FlexRAN pod
  k8s:
    state: present
    definition: "{{ lookup('template', 'pod_flexran_xran.yml') }}"

- name: make sure FlexRAN pod up
  k8s_info:
    api: v1 
    namespace: "{{flexran_du_ns}}"
    kind: Pod
    name: flexran-du
  register: flexran_pod
  retries: 60
  delay: 5
  until:
    - "flexran_pod.resources|length >=1"
    - "'status' in flexran_pod.resources[0]"
    - "'phase' in flexran_pod.resources[0].status"
    - "flexran_pod.resources[0].status.phase == 'Running'"

- name: copy files into pods
  kubernetes.core.k8s_cp:
    namespace: "{{flexran_du_ns}}"
    pod: flexran-du
    remote_path: /opt/flexran/auto
    local_path: "{{item}}"
    #no_preserve: True
  loop:
    - "{{test_run_dir}}/pod/autotest.py"
    - "{{test_run_dir}}/pod/cpu.py"
    - "{{test_run_dir}}/pod/process_testfile.py"
    - "{{test_run_dir}}/pod/read_yaml_write_xml.py"
    - "{{test_run_dir}}/pod/xran_mode_cfg.yaml"

- name: create {{test_run_dir}}/xran_mode_cfg.yaml 
  template:
    src: xran_mode_cfg.yaml 
    dest: "{{test_run_dir}}/xran_mode_cfg.yaml"
  become: yes

- name: execute xran test
  shell:
    cmd: pytest -s --verbose --junit-xml "{{ test_run_dir }}/report_temp.xml" --pod flexran-du --cfg xran_mode_cfg.yaml --xran --phystart --namespace {{ flexran_du_ns }} --test {{orancfg}} --timeout 300 test_flexran.py -o junit_suite_name={{orancfg}}
    chdir: "{{ test_run_dir }}"
  ignore_errors: yes
  register: results

- name: Find the result directory from results
  set_fact:
    results_dir: "{{results.stdout | regex_search('Result directory: (.*)', '\\1') | first }}"

- name: Add the results directory to the report xml for reference
  xml:
    file: "{{ test_run_dir }}/report_temp.xml"
    xpath: /testsuites
    add_children:
      - results_directory: "{{ results_dir }}"

- name: Concatenate temporary report file to final report file
  shell:
    cmd: "echo \"\" >> {{ test_run_dir }}/report_xran.xml; cat {{ test_run_dir }}/report_temp.xml >> {{ test_run_dir }}/report_xran.xml"

